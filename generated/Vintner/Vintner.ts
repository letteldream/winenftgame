// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class onVintnerCreated extends ethereum.Event {
  get params(): onVintnerCreated__Params {
    return new onVintnerCreated__Params(this);
  }
}

export class onVintnerCreated__Params {
  _event: onVintnerCreated;

  constructor(event: onVintnerCreated) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class onVintnerRevealed extends ethereum.Event {
  get params(): onVintnerRevealed__Params {
    return new onVintnerRevealed__Params(this);
  }
}

export class onVintnerRevealed__Params {
  _event: onVintnerRevealed;

  constructor(event: onVintnerRevealed) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get vintnerType(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Vintner__royaltyInfoResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getReceiver(): Address {
    return this.value0;
  }

  getRoyaltyAmount(): BigInt {
    return this.value1;
  }
}

export class Vintner extends ethereum.SmartContract {
  static bind(address: Address): Vintner {
    return new Vintner("Vintner", address);
  }

  BASE_URI(): string {
    let result = super.call("BASE_URI", "BASE_URI():(string)", []);

    return result[0].toString();
  }

  try_BASE_URI(): ethereum.CallResult<string> {
    let result = super.tryCall("BASE_URI", "BASE_URI():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  MASTER_VINTNER_TYPE(): BigInt {
    let result = super.call(
      "MASTER_VINTNER_TYPE",
      "MASTER_VINTNER_TYPE():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MASTER_VINTNER_TYPE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MASTER_VINTNER_TYPE",
      "MASTER_VINTNER_TYPE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MASTER_VINTNER_YIELD(): BigInt {
    let result = super.call(
      "MASTER_VINTNER_YIELD",
      "MASTER_VINTNER_YIELD():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MASTER_VINTNER_YIELD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MASTER_VINTNER_YIELD",
      "MASTER_VINTNER_YIELD():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  NUM_VINTNERS(): BigInt {
    let result = super.call("NUM_VINTNERS", "NUM_VINTNERS():(uint256)", []);

    return result[0].toBigInt();
  }

  try_NUM_VINTNERS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("NUM_VINTNERS", "NUM_VINTNERS():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  PROMOTIONAL_VINTNERS(): BigInt {
    let result = super.call(
      "PROMOTIONAL_VINTNERS",
      "PROMOTIONAL_VINTNERS():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_PROMOTIONAL_VINTNERS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "PROMOTIONAL_VINTNERS",
      "PROMOTIONAL_VINTNERS():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  VINTNER_PRICE_AVAX(): BigInt {
    let result = super.call(
      "VINTNER_PRICE_AVAX",
      "VINTNER_PRICE_AVAX():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_VINTNER_PRICE_AVAX(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "VINTNER_PRICE_AVAX",
      "VINTNER_PRICE_AVAX():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  VINTNER_PRICE_GRAPE(): BigInt {
    let result = super.call(
      "VINTNER_PRICE_GRAPE",
      "VINTNER_PRICE_GRAPE():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_VINTNER_PRICE_GRAPE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "VINTNER_PRICE_GRAPE",
      "VINTNER_PRICE_GRAPE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  VINTNER_TYPE(): BigInt {
    let result = super.call("VINTNER_TYPE", "VINTNER_TYPE():(uint256)", []);

    return result[0].toBigInt();
  }

  try_VINTNER_TYPE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("VINTNER_TYPE", "VINTNER_TYPE():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  VINTNER_YIELD(): BigInt {
    let result = super.call("VINTNER_YIELD", "VINTNER_YIELD():(uint256)", []);

    return result[0].toBigInt();
  }

  try_VINTNER_YIELD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "VINTNER_YIELD",
      "VINTNER_YIELD():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  WHITELIST_VINTNERS(): BigInt {
    let result = super.call(
      "WHITELIST_VINTNERS",
      "WHITELIST_VINTNERS():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_WHITELIST_VINTNERS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "WHITELIST_VINTNERS",
      "WHITELIST_VINTNERS():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOf(owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  couponSigner(): Address {
    let result = super.call("couponSigner", "couponSigner():(address)", []);

    return result[0].toAddress();
  }

  try_couponSigner(): ethereum.CallResult<Address> {
    let result = super.tryCall("couponSigner", "couponSigner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getApproved(tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getType(_tokenId: BigInt): BigInt {
    let result = super.call("getType", "getType(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toBigInt();
  }

  try_getType(_tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getType", "getType(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getYield(_tokenId: BigInt): BigInt {
    let result = super.call("getYield", "getYield(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toBigInt();
  }

  try_getYield(_tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getYield", "getYield(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  grapeAddress(): Address {
    let result = super.call("grapeAddress", "grapeAddress():(address)", []);

    return result[0].toAddress();
  }

  try_grapeAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("grapeAddress", "grapeAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isApprovedForAll(_owner: Address, _operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    _owner: Address,
    _operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  mintingStarted(): boolean {
    let result = super.call("mintingStarted", "mintingStarted():(bool)", []);

    return result[0].toBoolean();
  }

  try_mintingStarted(): ethereum.CallResult<boolean> {
    let result = super.tryCall("mintingStarted", "mintingStarted():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  mintingStartedWhitelist(): boolean {
    let result = super.call(
      "mintingStartedWhitelist",
      "mintingStartedWhitelist():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_mintingStartedWhitelist(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "mintingStartedWhitelist",
      "mintingStartedWhitelist():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerOf(tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  royaltiesAddress(): Address {
    let result = super.call(
      "royaltiesAddress",
      "royaltiesAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_royaltiesAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "royaltiesAddress",
      "royaltiesAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  royaltyInfo(tokenId: BigInt, value: BigInt): Vintner__royaltyInfoResult {
    let result = super.call(
      "royaltyInfo",
      "royaltyInfo(uint256,uint256):(address,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromUnsignedBigInt(value)
      ]
    );

    return new Vintner__royaltyInfoResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_royaltyInfo(
    tokenId: BigInt,
    value: BigInt
  ): ethereum.CallResult<Vintner__royaltyInfoResult> {
    let result = super.tryCall(
      "royaltyInfo",
      "royaltyInfo(uint256,uint256):(address,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromUnsignedBigInt(value)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Vintner__royaltyInfoResult(value[0].toAddress(), value[1].toBigInt())
    );
  }

  startTime(): BigInt {
    let result = super.call("startTime", "startTime():(uint256)", []);

    return result[0].toBigInt();
  }

  try_startTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("startTime", "startTime():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  startTimeWhitelist(): BigInt {
    let result = super.call(
      "startTimeWhitelist",
      "startTimeWhitelist():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_startTimeWhitelist(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "startTimeWhitelist",
      "startTimeWhitelist():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenTypes(param0: BigInt): BigInt {
    let result = super.call("tokenTypes", "tokenTypes(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBigInt();
  }

  try_tokenTypes(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("tokenTypes", "tokenTypes(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenURI(tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  typeYields(param0: BigInt): BigInt {
    let result = super.call("typeYields", "typeYields(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBigInt();
  }

  try_typeYields(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("typeYields", "typeYields(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  vintnerPublicMinted(): BigInt {
    let result = super.call(
      "vintnerPublicMinted",
      "vintnerPublicMinted():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_vintnerPublicMinted(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "vintnerPublicMinted",
      "vintnerPublicMinted():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  vintnerTypeOracleAddress(): Address {
    let result = super.call(
      "vintnerTypeOracleAddress",
      "vintnerTypeOracleAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_vintnerTypeOracleAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "vintnerTypeOracleAddress",
      "vintnerTypeOracleAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  vintnersMinted(): BigInt {
    let result = super.call("vintnersMinted", "vintnersMinted():(uint256)", []);

    return result[0].toBigInt();
  }

  try_vintnersMinted(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "vintnersMinted",
      "vintnersMinted():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  vintnersMintedPromotional(): BigInt {
    let result = super.call(
      "vintnersMintedPromotional",
      "vintnersMintedPromotional():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_vintnersMintedPromotional(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "vintnersMintedPromotional",
      "vintnersMintedPromotional():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  vintnersMintedWhitelist(): BigInt {
    let result = super.call(
      "vintnersMintedWhitelist",
      "vintnersMintedWhitelist():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_vintnersMintedWhitelist(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "vintnersMintedWhitelist",
      "vintnersMintedWhitelist():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  whitelistClaimed(param0: Address): BigInt {
    let result = super.call(
      "whitelistClaimed",
      "whitelistClaimed(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_whitelistClaimed(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "whitelistClaimed",
      "whitelistClaimed(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  wineryAddress(): Address {
    let result = super.call("wineryAddress", "wineryAddress():(address)", []);

    return result[0].toAddress();
  }

  try_wineryAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "wineryAddress",
      "wineryAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _grapeAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _couponSigner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _vintnerTypeOracleAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _BASE_URI(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class ForwardERC20sCall extends ethereum.Call {
  get inputs(): ForwardERC20sCall__Inputs {
    return new ForwardERC20sCall__Inputs(this);
  }

  get outputs(): ForwardERC20sCall__Outputs {
    return new ForwardERC20sCall__Outputs(this);
  }
}

export class ForwardERC20sCall__Inputs {
  _call: ForwardERC20sCall;

  constructor(call: ForwardERC20sCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get target(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ForwardERC20sCall__Outputs {
  _call: ForwardERC20sCall;

  constructor(call: ForwardERC20sCall) {
    this._call = call;
  }
}

export class MintPromotionalCall extends ethereum.Call {
  get inputs(): MintPromotionalCall__Inputs {
    return new MintPromotionalCall__Inputs(this);
  }

  get outputs(): MintPromotionalCall__Outputs {
    return new MintPromotionalCall__Outputs(this);
  }
}

export class MintPromotionalCall__Inputs {
  _call: MintPromotionalCall;

  constructor(call: MintPromotionalCall) {
    this._call = call;
  }

  get qty(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get vintnerType(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get target(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class MintPromotionalCall__Outputs {
  _call: MintPromotionalCall;

  constructor(call: MintPromotionalCall) {
    this._call = call;
  }
}

export class MintVintnerWithAVAXCall extends ethereum.Call {
  get inputs(): MintVintnerWithAVAXCall__Inputs {
    return new MintVintnerWithAVAXCall__Inputs(this);
  }

  get outputs(): MintVintnerWithAVAXCall__Outputs {
    return new MintVintnerWithAVAXCall__Outputs(this);
  }
}

export class MintVintnerWithAVAXCall__Inputs {
  _call: MintVintnerWithAVAXCall;

  constructor(call: MintVintnerWithAVAXCall) {
    this._call = call;
  }

  get qty(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class MintVintnerWithAVAXCall__Outputs {
  _call: MintVintnerWithAVAXCall;

  constructor(call: MintVintnerWithAVAXCall) {
    this._call = call;
  }
}

export class MintVintnerWithGrapeCall extends ethereum.Call {
  get inputs(): MintVintnerWithGrapeCall__Inputs {
    return new MintVintnerWithGrapeCall__Inputs(this);
  }

  get outputs(): MintVintnerWithGrapeCall__Outputs {
    return new MintVintnerWithGrapeCall__Outputs(this);
  }
}

export class MintVintnerWithGrapeCall__Inputs {
  _call: MintVintnerWithGrapeCall;

  constructor(call: MintVintnerWithGrapeCall) {
    this._call = call;
  }

  get qty(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class MintVintnerWithGrapeCall__Outputs {
  _call: MintVintnerWithGrapeCall;

  constructor(call: MintVintnerWithGrapeCall) {
    this._call = call;
  }
}

export class MintWhitelistCall extends ethereum.Call {
  get inputs(): MintWhitelistCall__Inputs {
    return new MintWhitelistCall__Inputs(this);
  }

  get outputs(): MintWhitelistCall__Outputs {
    return new MintWhitelistCall__Outputs(this);
  }
}

export class MintWhitelistCall__Inputs {
  _call: MintWhitelistCall;

  constructor(call: MintWhitelistCall) {
    this._call = call;
  }

  get qty(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get allotted(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get coupon(): MintWhitelistCallCouponStruct {
    return changetype<MintWhitelistCallCouponStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }
}

export class MintWhitelistCall__Outputs {
  _call: MintWhitelistCall;

  constructor(call: MintWhitelistCall) {
    this._call = call;
  }
}

export class MintWhitelistCallCouponStruct extends ethereum.Tuple {
  get r(): Bytes {
    return this[0].toBytes();
  }

  get s(): Bytes {
    return this[1].toBytes();
  }

  get v(): i32 {
    return this[2].toI32();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetBaseURICall extends ethereum.Call {
  get inputs(): SetBaseURICall__Inputs {
    return new SetBaseURICall__Inputs(this);
  }

  get outputs(): SetBaseURICall__Outputs {
    return new SetBaseURICall__Outputs(this);
  }
}

export class SetBaseURICall__Inputs {
  _call: SetBaseURICall;

  constructor(call: SetBaseURICall) {
    this._call = call;
  }

  get _BASE_URI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetBaseURICall__Outputs {
  _call: SetBaseURICall;

  constructor(call: SetBaseURICall) {
    this._call = call;
  }
}

export class SetCouponSignerCall extends ethereum.Call {
  get inputs(): SetCouponSignerCall__Inputs {
    return new SetCouponSignerCall__Inputs(this);
  }

  get outputs(): SetCouponSignerCall__Outputs {
    return new SetCouponSignerCall__Outputs(this);
  }
}

export class SetCouponSignerCall__Inputs {
  _call: SetCouponSignerCall;

  constructor(call: SetCouponSignerCall) {
    this._call = call;
  }

  get couponSigner_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCouponSignerCall__Outputs {
  _call: SetCouponSignerCall;

  constructor(call: SetCouponSignerCall) {
    this._call = call;
  }
}

export class SetGrapeAddressCall extends ethereum.Call {
  get inputs(): SetGrapeAddressCall__Inputs {
    return new SetGrapeAddressCall__Inputs(this);
  }

  get outputs(): SetGrapeAddressCall__Outputs {
    return new SetGrapeAddressCall__Outputs(this);
  }
}

export class SetGrapeAddressCall__Inputs {
  _call: SetGrapeAddressCall;

  constructor(call: SetGrapeAddressCall) {
    this._call = call;
  }

  get _grapeAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGrapeAddressCall__Outputs {
  _call: SetGrapeAddressCall;

  constructor(call: SetGrapeAddressCall) {
    this._call = call;
  }
}

export class SetRoyaltiesAddressCall extends ethereum.Call {
  get inputs(): SetRoyaltiesAddressCall__Inputs {
    return new SetRoyaltiesAddressCall__Inputs(this);
  }

  get outputs(): SetRoyaltiesAddressCall__Outputs {
    return new SetRoyaltiesAddressCall__Outputs(this);
  }
}

export class SetRoyaltiesAddressCall__Inputs {
  _call: SetRoyaltiesAddressCall;

  constructor(call: SetRoyaltiesAddressCall) {
    this._call = call;
  }

  get _royaltiesAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRoyaltiesAddressCall__Outputs {
  _call: SetRoyaltiesAddressCall;

  constructor(call: SetRoyaltiesAddressCall) {
    this._call = call;
  }
}

export class SetRoyaltiesFeesCall extends ethereum.Call {
  get inputs(): SetRoyaltiesFeesCall__Inputs {
    return new SetRoyaltiesFeesCall__Inputs(this);
  }

  get outputs(): SetRoyaltiesFeesCall__Outputs {
    return new SetRoyaltiesFeesCall__Outputs(this);
  }
}

export class SetRoyaltiesFeesCall__Inputs {
  _call: SetRoyaltiesFeesCall;

  constructor(call: SetRoyaltiesFeesCall) {
    this._call = call;
  }

  get _royaltiesFees(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetRoyaltiesFeesCall__Outputs {
  _call: SetRoyaltiesFeesCall;

  constructor(call: SetRoyaltiesFeesCall) {
    this._call = call;
  }
}

export class SetStartTimeCall extends ethereum.Call {
  get inputs(): SetStartTimeCall__Inputs {
    return new SetStartTimeCall__Inputs(this);
  }

  get outputs(): SetStartTimeCall__Outputs {
    return new SetStartTimeCall__Outputs(this);
  }
}

export class SetStartTimeCall__Inputs {
  _call: SetStartTimeCall;

  constructor(call: SetStartTimeCall) {
    this._call = call;
  }

  get _startTime(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetStartTimeCall__Outputs {
  _call: SetStartTimeCall;

  constructor(call: SetStartTimeCall) {
    this._call = call;
  }
}

export class SetStartTimeWhitelistCall extends ethereum.Call {
  get inputs(): SetStartTimeWhitelistCall__Inputs {
    return new SetStartTimeWhitelistCall__Inputs(this);
  }

  get outputs(): SetStartTimeWhitelistCall__Outputs {
    return new SetStartTimeWhitelistCall__Outputs(this);
  }
}

export class SetStartTimeWhitelistCall__Inputs {
  _call: SetStartTimeWhitelistCall;

  constructor(call: SetStartTimeWhitelistCall) {
    this._call = call;
  }

  get _startTime(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetStartTimeWhitelistCall__Outputs {
  _call: SetStartTimeWhitelistCall;

  constructor(call: SetStartTimeWhitelistCall) {
    this._call = call;
  }
}

export class SetVintnerTypeCall extends ethereum.Call {
  get inputs(): SetVintnerTypeCall__Inputs {
    return new SetVintnerTypeCall__Inputs(this);
  }

  get outputs(): SetVintnerTypeCall__Outputs {
    return new SetVintnerTypeCall__Outputs(this);
  }
}

export class SetVintnerTypeCall__Inputs {
  _call: SetVintnerTypeCall;

  constructor(call: SetVintnerTypeCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get vintnerType(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetVintnerTypeCall__Outputs {
  _call: SetVintnerTypeCall;

  constructor(call: SetVintnerTypeCall) {
    this._call = call;
  }
}

export class SetWhitelistMintCountCall extends ethereum.Call {
  get inputs(): SetWhitelistMintCountCall__Inputs {
    return new SetWhitelistMintCountCall__Inputs(this);
  }

  get outputs(): SetWhitelistMintCountCall__Outputs {
    return new SetWhitelistMintCountCall__Outputs(this);
  }
}

export class SetWhitelistMintCountCall__Inputs {
  _call: SetWhitelistMintCountCall;

  constructor(call: SetWhitelistMintCountCall) {
    this._call = call;
  }

  get qty(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetWhitelistMintCountCall__Outputs {
  _call: SetWhitelistMintCountCall;

  constructor(call: SetWhitelistMintCountCall) {
    this._call = call;
  }
}

export class SetWineryAddressCall extends ethereum.Call {
  get inputs(): SetWineryAddressCall__Inputs {
    return new SetWineryAddressCall__Inputs(this);
  }

  get outputs(): SetWineryAddressCall__Outputs {
    return new SetWineryAddressCall__Outputs(this);
  }
}

export class SetWineryAddressCall__Inputs {
  _call: SetWineryAddressCall;

  constructor(call: SetWineryAddressCall) {
    this._call = call;
  }

  get _wineryAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetWineryAddressCall__Outputs {
  _call: SetWineryAddressCall;

  constructor(call: SetWineryAddressCall) {
    this._call = call;
  }
}

export class SetvintnerTypeOracleAddressCall extends ethereum.Call {
  get inputs(): SetvintnerTypeOracleAddressCall__Inputs {
    return new SetvintnerTypeOracleAddressCall__Inputs(this);
  }

  get outputs(): SetvintnerTypeOracleAddressCall__Outputs {
    return new SetvintnerTypeOracleAddressCall__Outputs(this);
  }
}

export class SetvintnerTypeOracleAddressCall__Inputs {
  _call: SetvintnerTypeOracleAddressCall;

  constructor(call: SetvintnerTypeOracleAddressCall) {
    this._call = call;
  }

  get _vintnerTypeOracleAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetvintnerTypeOracleAddressCall__Outputs {
  _call: SetvintnerTypeOracleAddressCall;

  constructor(call: SetvintnerTypeOracleAddressCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawAVAXCall extends ethereum.Call {
  get inputs(): WithdrawAVAXCall__Inputs {
    return new WithdrawAVAXCall__Inputs(this);
  }

  get outputs(): WithdrawAVAXCall__Outputs {
    return new WithdrawAVAXCall__Outputs(this);
  }
}

export class WithdrawAVAXCall__Inputs {
  _call: WithdrawAVAXCall;

  constructor(call: WithdrawAVAXCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawAVAXCall__Outputs {
  _call: WithdrawAVAXCall;

  constructor(call: WithdrawAVAXCall) {
    this._call = call;
  }
}
